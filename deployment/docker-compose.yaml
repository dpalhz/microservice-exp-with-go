version: "3.8"

services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  auth-service:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: auth
    container_name: auth_service
    depends_on:
      - postgres
      - kafka
    ports:
      - "3000:3000"
    env_file: -../.env
    networks:
      - app-network
    volumes: -../:/app

  email-service:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: email
    container_name: email_service
    depends_on:
      - kafka
    env_file: -../.env
    networks:
      - app-network
    volumes: -../:/app

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
